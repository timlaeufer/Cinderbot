[Open Game Prompts]
og_howto = `Welp {name}'
og_format = 
	Format: 
	`.opengame (public/private) (name without spaces, use _) (channel_1_name) (channel_2_name) ....`
	
	If you put a `v-` in front of the channel name, I'll make it a voice channel!
	
	By default, only people with the assigned role are able to talk in the voice channels.
	
	Example:
	`.opengame public Cinderbrush v-talks general planning memes visitor`
	
	creates a role called 'Cinderbrush', which can be assigned to the members.
	Then creates a category with the same name, and adds a voicechannel 'talks', and four text channels called 'general', 'planning', 'memes', and 'visitor'.
	Channels with `visitor` in their name will be open for the public to chat in.
	
	if you put in mentions of other members in the opengame-command, they will be assigned the created role.
og_privpub_not_clear = Sorry, I don't know what you mean by `{problem}`! It has to be either `public` or `private`.
og_not_enough_args = Your message does not have enough arguments! Please use `.opengamehelp` for more information.
og_mention_instead_of_name = You put a mention instead of a game name. Please use `.opengamehelp` for more information.
og_no_channels_given = You didn't tell me what channels to create! Please use `.opengamehelp` for more information.
og_mention_instead_of_type = You gave me a mention instead of a game name! Please use `.opengamehelp` for more information.
og_game_waiting_for_confirmation_1 = Success! This is what I got:
	The name of the game will be **{gamename}**.
	It will be a **{gametype}** game.
	This will also be the name of the role. 
	These are the channels I will create:
og_game_waiting_for_confirmation_2 = If that is correct, please confirm the creation by writing `.confirm {gamename}`.
	If it is not, just do the command again with the correct information.
og_created_info = {auth_mention}
	I created your category and role **{cat_name}** aswell as the following channels:
og_channel_created = A channel named {channelname}...
og_members_assigned_info = I also assigned the following members the role {role_mention}:

[Summary]
summary_channel = A {type} channel called **{channelname}**.
summary_user = A player with the name **{playername}**.

[Permissions]
game_open_only_mods = Only Moderators can open games.
game_confirm_only_mods = Only Moderators can confirm games.
move_only_players = Only Players can use the `.move` command. Check the rules on how to get the role.
fun_only_players = Only Players are allowed to have fun on here. /s
	Please assign yourself the Player-role!

[Logging]
ismod = ----
	Checked if {author} is a mod. Result: {result}. 
	Message: {msg} 
	Channel: {channel}
	Category: {category}
	Time: {time}
	------
	
isplayer = ----
	Checked if {author} is a mod. Result: {result}. 
	Message: {msg} 
	Channel: {channel}
	Category: {category}
	Time: {time}
	------
	
called =-----
	Command invoked:
	Category: {category}
	Channel: {channel}
	Author: {author}
	Message: {message}
	Time: {time}
	-----
	
sendmsg = -----
    I sent a message:
	Category: {category}
	Channel: {channel}
	Message: {message}
	Time: {time}
	------
	
category_created = -----
	I created a new category!
	Caller: {author}
	Category name: {category}
	Time: {time}
	------
	
role_created = -----
	I created a new role!
	Caller: {author}
	Role Name: {rolename}
	Time: {time}
	-----
	
channel_created = -------
	I created a new channel!
	Caller: {author}
	Channel name: {channelname}
	Category name of Channel: {categoryname}
	Time: {time}
	------

role_assigned = ----------
	I assigned a new role!
	Caller: {author}
	Member ID: {id}
	Member Name: {member_name}
	---------
	



[Moves]
move_failed = You rolled 2d6(**{d1}**,**{d2}**) + {mod} = **{res}**! 
	You failed your move! Please mark Experience!
move_double_six = Wow, you're lucky!
move_rolled = {mention} rolls the following move ...
	{move}
multiple_moves_found = I found multiple moves! I got `{raw}` as a move from your command `{comm}`:
multiple_moves_single = The move named `{move}` from the Skin `{skin}` is called by: `.move {call}`
move_not_found = I found no move with `{raw}` from your input `{comm}`.
move_overview =***~{name}~***
	{desc}
rollable_overview_addition = **On a 10 or higher:**
	{success}
	
	**On a 7-9**
	{complication}
move_roll: You rolled 2d6(**{d1}**,**{d2}**) {mod} = ***{res}***!
	{event}
move_help: Hi! To use the .move feature of {me}, please use the following format:
	`.move <move name> <modifier)`
	
	`<move name>` can be `Beyond the Veil` or something else. The bot can deal with full sentenced and blanks in. It tries to find the best match if you dont exactly nail it. If you write the exact move name, you'll find it.
	
	The `<modifier>` is the modifier you roll with - that's only **if you roll**. You don\'t have to give a modifier to look up a move.
	`.move Beyond The Veil` gets the \'Beyond The Veil\'-Move from the Fae. If you add a `+2` anywhere, the bot knows that you're trying to roll and only shows you what you wanna know.
	
	If you want to know what moves there are, please do `.movelist`. For a specific skin, do `.skin <name>`
skin_not_found = I'm sorry, I couldnt find your skin {searched}! These are the skills that are loaded:

[Errors]
cant_open_file = Cannot open the file {fname}! Hey {owner} please look at this!

[Fun]
gib = Hey {mention}! 
	Enjoy your ... {thing}
gib_what = Gib you **what?** :<

[Help]
general_help = Hi! My name is {me}. I'm a bot made by {tim}, with the help of ...

    {annie}, who entered nearly all the Character moves! Thank you so much!.
    {ollie}, who entered nearly all of the Player and MC moves! Thank you so much!.
 
    If you want to use me, check out `.movehelp`, `.movelist`, or `.opengamehelp`.
	Because I'm so extra, I leave out the apostrophes! /s (JSON converts directly into a python dict, and apostrophes are for python strings. So `apostrophe -> bad`)
	

[Events]
added_question = Done! {mention} added the following question number {num}:
	*{question}*
send_question = Question number {num}:
	{question}
	